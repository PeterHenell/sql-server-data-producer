<Window x:Class="SQLDataProducer.GUI.Views.ProjectView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:entities="clr-namespace:SQLDataProducer.Entities.ExecutionEntities;assembly=SQLDataProducer.Entities"
        xmlns:ignore="http://www.ignore.com"
        xmlns:e="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:behaviours="clr-namespace:SQLDataProducer.GUI.Behavior"
        mc:Ignorable="d ignore"
        DataContext="{Binding Project, Source={StaticResource Locator}}">
    <Window.Resources>



        <Style TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <TextBlock>
                            <ContentPresenter />
                        </TextBlock>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Margin" Value="2 0 0 0" />
            <Setter Property="Foreground" Value="Blue" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Foreground" Value="Red" />
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <BooleanToVisibilityConverter x:Key="visiConv" />

        <!--<DataTemplate x:Key="recursiveListViewData">

            <DataTemplate.Resources>
                <Style TargetType="Button" BasedOn="{StaticResource LinkButton}">
                    <Setter Property="Margin" Value="10 0 0 0" />
                </Style>
            </DataTemplate.Resources>
            <StackPanel>
                <Rectangle HorizontalAlignment="Center" VerticalAlignment="Stretch" Fill="DarkGray" Height="25" Width="1" 
                           Visibility="{Binding Path=Parent.Parent, TargetNullValue=Collapsed}" />

                <Border BorderThickness="1" BorderBrush="Gray" Background="Snow" CornerRadius="3 3 3 3" Margin="0 0 0 0" Width="200">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" MinWidth="150" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <StackPanel Orientation="Vertical" Grid.Column="1" Margin="0 0 5 0">
                            <TextBlock HorizontalAlignment="Right" Foreground="Gray" Text="{Binding RepeatCount, StringFormat=# {0}}" Margin="0 -16 -10 0"  />

                            <Button Content="+T" HorizontalAlignment="Right" />
                            <Button Content="+N" HorizontalAlignment="Right" />
                        </StackPanel>

                        <StackPanel Grid.Column="0">
                            <ItemsControl ItemsSource="{Binding Tables}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding FullName}" Margin="3 0 0 0"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                    </Grid>
                </Border>
                <ItemsControl ItemsSource="{Binding Children}" ItemTemplate="{DynamicResource recursiveListViewData}" Margin="15 0 0 0" />
            </StackPanel>
        </DataTemplate>-->

        <Style TargetType="ListBox">
            <Setter Property="BorderBrush" Value="Silver"/>
        </Style>

    </Window.Resources>

    <Grid>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <!--<ListBox Grid.Column="0" ItemsSource="{Binding Model.Tables}" SelectedItem="{Binding SelectedTable, Mode=TwoWay}" />-->

        <!--<ItemsControl  Grid.Column="1" ItemTemplate="{DynamicResource recursiveListViewData}" ItemsSource="{Binding Model.RootNode.Children}" Margin="0 20 0 0" />-->
        <TreeView ItemsSource="{Binding Model.RootNode.Children}" 
                  Margin="10,10,27,10" Grid.Column="1" 
                  HorizontalAlignment="Stretch" 
                  VerticalAlignment="Stretch" Grid.RowSpan="2" 
                  >
            <e:Interaction.Behaviors>
                <behaviours:BindableSelectedItemBehavior SelectedItem="{Binding SelectedExecutionNode, Mode=TwoWay}" />
            </e:Interaction.Behaviors>

            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Children}" DataType="{x:Type entities:ExecutionNode}">
                    <DataTemplate.Resources>
                        <Style TargetType="Button">
                            <Setter Property="Margin" Value="10 0 0 0" />
                            <Setter Property="HorizontalAlignment" Value="Right" />
                        </Style>
                    </DataTemplate.Resources>

                    <Border CornerRadius="3" BorderThickness="1" BorderBrush="Silver" Margin="3 3 3 3" Width="200">
                        <Grid Margin="3 0 3 0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"  />
                                <ColumnDefinition Width="55" />
                            </Grid.ColumnDefinitions>

                            <StackPanel Grid.Column="1" HorizontalAlignment="Right" >
                                <TextBlock Text="{Binding NodeName}" HorizontalAlignment="Right" />
                                <TextBlock Text="{Binding RepeatCount}" HorizontalAlignment="Right" />
                                <!--<Button Content="Edit" Command="{Binding EditExecutionNodeCommand}" />-->
                            </StackPanel>

                            <ItemsControl ItemsSource="{Binding Tables}" Grid.Column="0">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding FullName}" Margin="3 0 0 0"/>

                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Grid>
                    </Border>

                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>

        <Grid Grid.Column="1" 
              Visibility="{Binding Path=SelectedExecutionNode, TargetNullValue=Collapsed}" Grid.ColumnSpan="2" Margin="261,0,17,0" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="200" />
                <ColumnDefinition Width="200" />
            </Grid.ColumnDefinitions>

            <GroupBox Grid.Column="1" Header="Configure Node:" Grid.RowSpan="2">
                <StackPanel >

                    <GroupBox Header="Basic info">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50*" />
                                <ColumnDefinition Width="50*" />
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <TextBlock Text="Node Name" Grid.Column="0" Grid.Row="0" />
                            <TextBlock Text="Repeat Count" Grid.Column="0" Grid.Row="1" />

                            <TextBox Text="{Binding SelectedExecutionNode.NodeName}"  Grid.Column="1" Grid.Row="0"/>
                            <TextBox Text="{Binding SelectedExecutionNode.RepeatCount, Mode=TwoWay}"  Grid.Column="1" Grid.Row="1"/>
                        </Grid>
                    </GroupBox>
                    <GroupBox Header="Tables in Node">
                        <StackPanel Orientation="Horizontal">
                            <ListBox ItemsSource="{Binding SelectedExecutionNode.Tables}" SelectedItem="{Binding SelectedTable}" >
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="120" />
                                                <ColumnDefinition Width="auto" />
                                            </Grid.ColumnDefinitions>

                                            <TextBlock Text="{Binding FullName}" Grid.Column="0" />

                                            <StackPanel Grid.Column="1" Orientation="Horizontal" >
                                                <Button Content="-" Command="{Binding DataContext.RemoveTableFromSelectedNodeCommand, RelativeSource={RelativeSource FindAncestor, 
                                                    AncestorType={x:Type ListBox}}}" CommandParameter="{Binding .}" />
                                                <Button Content="u" Command="{Binding DataContext.MoveTableUpCommand, RelativeSource={RelativeSource FindAncestor, 
                                                    AncestorType={x:Type ListBox}}}" CommandParameter="{Binding .}" />
                                                <Button Content="d" Command="{Binding DataContext.MoveTableDownCommand, RelativeSource={RelativeSource FindAncestor, 
                                                    AncestorType={x:Type ListBox}}}" CommandParameter="{Binding .}" />
                                            </StackPanel>
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                            <GroupBox >
                                <GroupBox.Header>
                                    <TextBlock Text="{Binding Path=SelectedTable.FullName, StringFormat=Configure {0}}" />
                                </GroupBox.Header>
                                <!--Visibility="{Binding SelectedTable, TargetNullValue=Collapsed}">-->
                                <DataGrid ItemsSource="{Binding Path=SelectedTable.Columns, Mode=OneWay, UpdateSourceTrigger=Explicit}" 
                                        AutoGenerateColumns="false" 
                                        IsReadOnly="True" 
                                        SelectionMode="Single"
                                        SelectionUnit="FullRow"
                                        SelectedItem="{Binding SelectedColumn, Mode=TwoWay}">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Binding="{Binding ColumnName, Mode=OneWay}" Header="Column Name" IsReadOnly="True" />
                                        <DataGridTextColumn Binding="{Binding ColumnDataType, Mode=OneWay}" Header="Data Type" IsReadOnly="True" />
                                        <DataGridCheckBoxColumn IsReadOnly="True" Binding="{Binding ColumnDataType.IsNullable, Mode=OneWay}" Header="Nullable?" />

                                        <DataGridTemplateColumn CanUserResize="False">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <!--<Image 
                                            Source="/SQLDataProducer;component/Styles/Warning.png" ToolTip="{Binding WarningText, Mode=OneWay}" Visibility="{Binding HasWarning, Mode=OneWay, Converter={StaticResource ResourceKey=visiConv}}"  />-->
                                                    <TextBlock Text="w"/>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>

                                        <DataGridTemplateColumn Header="Data Generator">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <StackPanel>
                                                        <TextBlock Text="{Binding Generator.GeneratorName, Mode=OneWay}" Height="25" />
                                                    </StackPanel>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridCheckBoxColumn Binding="{Binding HasConstraints, Mode=OneWay}" Width="110"
                                            Header="Has Constraints?" IsReadOnly="True"/>
                                        <DataGridTextColumn Binding="{Binding Generator.GeneratorParameters.NiceString, Mode=OneWay}" Width="*"
                                            Header="Parameters" IsReadOnly="True"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </GroupBox>
                        </StackPanel>

                    </GroupBox>
                    <GroupBox Header="Configure Column">
                        <GroupBox Header="Configure the Parameters for the Generator" Grid.Column="1" Grid.Row="1">
                            <StackPanel>
                                <ListBox
                        ItemsSource="{Binding SelectedColumn.Generator.GeneratorParameters, Mode=OneWay}" 
                          VerticalAlignment="Stretch">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid 
                                        Visibility="{Binding Value.IsWriteEnabled, Mode=OneWay, Converter={StaticResource ResourceKey=visiConv}}"
                                        HorizontalAlignment="Stretch" 
                                        VerticalAlignment="Stretch">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="150" />
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Text="{Binding Value.ParameterName, Mode=OneWay}" Grid.Column="0" Margin="3 3 3 3" />

                                                <TextBox Text="{Binding Value.Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  
                                                         Grid.Column="1" MinWidth="150" />


                                                <Button Content="Pick Column" Grid.Column="2"
                                                Command="{Binding Path=DataContext.ConfigureReferenceParameterCommand, 
                                                RelativeSource={RelativeSource FindAncestor, 
                                                AncestorType={x:Type ListBox}}}" 
                                                CommandParameter="{Binding .Value}" 
                                               
                                            >
                                                </Button>

                                            </Grid>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>

                                <GroupBox Header="Generator Description" Margin="0 5 0 0">
                                    <TextBlock Text="{Binding SelectedColumn.Generator.GeneratorHelpText, Mode=OneWay}" TextWrapping="Wrap" />
                                </GroupBox>
                                <GroupBox Header="Column Constraints" Margin="0 5 0 0">
                                    <TextBlock Text="{Binding SelectedColumn.Constraints, Mode=OneWay}" TextWrapping="Wrap"  />
                                </GroupBox>
                            </StackPanel>
                        </GroupBox>
                    </GroupBox>
                    
                    <GroupBox Header="Node operations">
                        <StackPanel>
                            <Button Content="Add Child Node"  Command="{Binding AddChildNodeCommand}" CommandParameter="{Binding SelectedExecutionNode}" />
                            <Button Content="Add Parent Node" Command="{Binding AddParentNodeCommand}" CommandParameter="{Binding SelectedExecutionNode}"/>
                            <Button Content="Merge Node with Parent Node" Command="{Binding MergeNodeWithParentNodeCommand}" CommandParameter="{Binding SelectedExecutionNode}" />
                            <Button Content="Remove Node" Command="{Binding RemoveNodeCommand}" CommandParameter="{Binding SelectedExecutionNode}"/>
                            <Button Content="Move Node Up" Command="{Binding MoveNodeUpCommand}" CommandParameter="{Binding SelectedExecutionNode}"/>
                        </StackPanel>
                    </GroupBox>
                </StackPanel>
            </GroupBox>

            <Border Grid.Column="2">
                <StackPanel>
                    <GroupBox Header="Available tables">
                        <ListBox ItemsSource="{Binding Model.Tables}" >
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="120" />
                                            <ColumnDefinition Width="auto" />
                                        </Grid.ColumnDefinitions>

                                        <TextBlock Text="{Binding FullName}" Grid.Column="0" />

                                        <StackPanel Grid.Column="1" Orientation="Horizontal" >
                                            <Button Content="+" Command="{Binding DataContext.AddTableToSelectedExecutionNodeCommand, RelativeSource={RelativeSource FindAncestor, 
                                                    AncestorType={x:Type ListBox}}}" CommandParameter="{Binding .}" />
                                        </StackPanel>
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </GroupBox>
                </StackPanel>
            </Border>

            <Border>
                


                <!--<DataGrid ItemsSource="{Binding Path=Model.SelectedExecutionItem.TargetTable.Columns, Mode=OneWay, UpdateSourceTrigger=Explicit}" 
                           
                            AutoGenerateColumns="false" 
                          
                            IsReadOnly="True" 
                            SelectionMode="Single"
                            SelectionUnit="FullRow"
                            SelectedItem="{Binding Model.SelectedColumn, Mode=TwoWay}"
                        
                          >
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding ColumnName}" Header="Column Name" IsReadOnly="True" />
                        <DataGridTextColumn Binding="{Binding ColumnDataType}" Header="Data Type" IsReadOnly="True" />
                        <DataGridCheckBoxColumn IsReadOnly="True" Binding="{Binding ColumnDataType.IsNullable}" Header="Nullable?" />

                        <DataGridTemplateColumn CanUserResize="False">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Image 
                                Source="/SQLDataProducer;component/Styles/Warning.png" ToolTip="{Binding WarningText}" Visibility="{Binding HasWarning, Converter={StaticResource ResourceKey=visiConv}}"  />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="Data Generator">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <TextBlock Text="{Binding Generator.GeneratorName}" Height="25" />
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridCheckBoxColumn Binding="{Binding HasConstraints, Mode=OneWay}" Width="110"
                                            Header="Has Constraints?" IsReadOnly="True"/>
                        <DataGridTextColumn Binding="{Binding Generator.GeneratorParameters.NiceString}" Width="*"
                                            Header="Parameters" IsReadOnly="True"/>


                    </DataGrid.Columns>
                </DataGrid>-->


                <!--<GroupBox Header="Select Generator" Grid.Column="1" Grid.Row="0">
                    <ComboBox  
                        ItemsSource="{Binding Model.SelectedColumn.PossibleGenerators}"
                        SelectedItem="{Binding Model.SelectedColumn.Generator, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        Height="25" >
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding GeneratorName}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </GroupBox>

                <GroupBox Header="Configure the Parameters for the Generator" Grid.Column="1" Grid.Row="1">
                    <StackPanel>
                        <ListBox
                        ItemsSource="{Binding Model.SelectedColumn.Generator.GeneratorParameters}" 
                          VerticalAlignment="Stretch">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid 
                                        Visibility="{Binding IsWriteEnabled, Converter={StaticResource ResourceKey=visiConv}}"
                                        HorizontalAlignment="Stretch" 
                                        VerticalAlignment="Stretch">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="150" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{Binding ParameterName}" Grid.Column="0" Margin="3 3 3 3" />

                                        <TextBox Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}"  Grid.Column="1" MinWidth="150" Style="{StaticResource ResourceKey=NotEnabledIfValueFromOtherColumnGenerator}"/>
                                        -->
                <!--<ContentControl 
                                                        Style="{StaticResource ResourceKey=ParameterConfigurationStyle}" 
                                                        Grid.Column="1" 
                                                        MinWidth="150" 
                                                        HorizontalAlignment="Left" />-->
                <!--

                                        <Button Content="Pick Column" Grid.Column="2"
                                                Command="{Binding Path=DataContext.ConfigureReferenceParameterCommand, 
                                                RelativeSource={RelativeSource FindAncestor, 
                                                AncestorType={x:Type ListBox}}}" 
                                                CommandParameter="{Binding .}" 
                                                Style="{StaticResource ResourceKey=VisibleIfValueFromOtherColumnGenerator}"
                                            >
                                        </Button>

                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>

                        <GroupBox Header="Generator Description" Margin="0 5 0 0">
                            <TextBlock Text="{Binding Model.SelectedColumn.Generator.GeneratorHelpText}" TextWrapping="Wrap" />
                        </GroupBox>
                        <GroupBox Header="Column Constraints" Margin="0 5 0 0">
                            <TextBlock Text="{Binding Model.SelectedColumn.Constraints, Mode=OneWay}" TextWrapping="Wrap"  />
                        </GroupBox>
                    </StackPanel>
                </GroupBox>-->

            </Border>

        </Grid>

    </Grid>
</Window>
